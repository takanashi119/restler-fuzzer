################################################################################
 main_driver_500

 Hash: main_driver_500_8e3af09466f6df2559b796ac0c0c2041aca7feea

 To attempt to reproduce this bug using restler, run restler with the command
 line option of --replay_log <path_to_this_log>.
 If an authentication token is required, you must also specify the token_refresh_cmd.

 This log may contain specific values for IDs or names that were generated
 during fuzzing, using the fuzzing dictionary. Such names will be re-played
 without modification. You must update the replay log manually with any changes
 required to execute the requests in your environment (for example, replacing
 pre-created account, subscription, or other resource IDs, as needed).
################################################################################

-> GET /createdb HTTP/1.1\r\nAccept: application/json\r\nHost: localhost:5000\r\nAUTHORIZATION TOKEN\r\n\r\n
! producer_timing_delay 0
! max_async_wait_time 0
PREVIOUS RESPONSE: 'HTTP/1.1 200 OK\r\nServer: Werkzeug/2.2.3 Python/3.10.12\r\nDate: Mon, 08 Jul 2024 05:10:27 GMT\r\nContent-Type: application/json\r\nContent-Length: 36\r\nConnection: close\r\n\r\n{ "message": "Database populated." }'

-> POST /books/v1 HTTP/1.1\r\nAccept: application/json\r\nHost: localhost:5000\r\nContent-Type: application/json\r\nAUTHORIZATION TOKEN\r\n\r\n{\n    "book_title":"book99",\n    "secret":"pass1secret"}\r\n
! producer_timing_delay 0
! max_async_wait_time 0
PREVIOUS RESPONSE: 'HTTP/1.1 500 INTERNAL SERVER ERROR\r\nServer: Werkzeug/2.2.3 Python/3.10.12\r\nDate: Mon, 08 Jul 2024 05:10:27 GMT\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 19311\r\nConnection: close\r\n\r\n<!doctype html>\n<html lang=en>\n  <head>\n    <title>AttributeError: \'NoneType\' object has no attribute \'id\'\n // Werkzeug Debugger</title>\n    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">\n    <link rel="shortcut icon"\n        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">\n    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>\n    <script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = "L48rFxBOqjzMj3nUqqic";\n    </script>\n  </head>\n  <body style="background-color: #fff">\n    <div class="debugger">\n<h1>AttributeError</h1>\n<div class="detail">\n  <p class="errormsg">AttributeError: &#39;NoneType&#39; object has no attribute &#39;id&#39;\n</p>\n</div>\n<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>\n<div class="traceback">\n  <h3></h3>\n  <ul><li><div class="frame" id="frame-139361847937392">\n  <h4>File <cite class="filename">"/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py"</cite>,\n      line <em class="line">2548</em>,\n      in <code class="function">__call__</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>\n<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>\n<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>\n<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div>\n</div>\n\n<li><div class="frame" id="frame-139361847950496">\n  <h4>File <cite class="filename">"/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py"</cite>,\n      line <em class="line">2528</em>,\n      in <code class="function">wsgi_app</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre>\n<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>\n<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>\n<pre class="line before"><span class="ws">                </span>error = e</pre>\n<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>\n<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>\n<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>\n<pre class="line after"><span class="ws">                </span>raise</pre>\n<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>\n<pre class="line after"><span class="ws">        </span>finally:</pre></div>\n</div>\n\n<li><div class="frame" id="frame-139361847945232">\n  <h4>File <cite class="filename">"/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py"</cite>,\n      line <em class="line">2525</em>,\n      in <code class="function">wsgi_app</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>\n<pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre>\n<pre class="line before"><span class="ws">        </span>try:</pre>\n<pre class="line before"><span class="ws">            </span>try:</pre>\n<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>\n<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>\n<pre class="line after"><span class="ws">                </span>error = e</pre>\n<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>\n<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>\n<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>\n</div>\n\n<li><div class="frame" id="frame-139361851688208">\n  <h4>File <cite class="filename">"/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py"</cite>,\n      line <em class="line">1822</em>,\n      in <code class="function">full_dispatch_request</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>\n<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>\n<pre class="line before"><span class="ws">            </span>if rv is None:</pre>\n<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>\n<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>\n<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>\n<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>\n<pre class="line after"><span class="ws">        </span>self,</pre>\n<pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div>\n</div>\n\n<li><div class="frame" id="frame-139361851701760">\n  <h4>File <cite class="filename">"/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py"</cite>,\n      line <em class="line">1820</em>,\n      in <code class="function">full_dispatch_request</code></h4>\n  <div class="source "><pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span>try:</pre>\n<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>\n<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>\n<pre class="line before"><span class="ws">            </span>if rv is None:</pre>\n<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>\n<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>\n<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>\n<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>\n</div>\n\n<li><div class="frame" id="frame-139361851702880">\n  <h4>File <cite class="filename">"/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py"</cite>,\n      line <em class="line">1796</em>,\n      in <code class="function">dispatch_request</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>\n<pre class="line before"><span class="ws">        </span>):</pre>\n<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>\n<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>\n<pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>\n<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>\n<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>\n<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>\n<pre class="line after"><span class="ws">        </span>error handling.</pre></div>\n</div>\n\n<li><div class="frame" id="frame-139361851691456">\n  <h4>File <cite class="filename">"/home/takanashi/.local/lib/python3.10/site-packages/connexion/decorators/decorator.py"</cite>,\n      line <em class="line">68</em>,\n      in <code class="function">wrapper</code></h4>\n  <div class="source "><pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span>else:  # pragma: no cover</pre>\n<pre class="line before"><span class="ws">            </span>@functools.wraps(function)</pre>\n<pre class="line before"><span class="ws">            </span>def wrapper(*args, **kwargs):</pre>\n<pre class="line before"><span class="ws">                </span>request = self.api.get_request(*args, **kwargs)</pre>\n<pre class="line current"><span class="ws">                </span>response = function(request)</pre>\n<pre class="line after"><span class="ws">                </span>return self.api.get_response(response, self.mimetype, request)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return wrapper</pre></div>\n</div>\n\n<li><div class="frame" id="frame-139361851686976">\n  <h4>File <cite class="filename">"/home/takanashi/.local/lib/python3.10/site-packages/connexion/decorators/uri_parsing.py"</cite>,\n      line <em class="line">149</em>,\n      in <code class="function">wrapper</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>form = coerce_dict(request.form)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">            </span>request.query = self.resolve_query(query)</pre>\n<pre class="line before"><span class="ws">            </span>request.path_params = self.resolve_path(path_params)</pre>\n<pre class="line before"><span class="ws">            </span>request.form = self.resolve_form(form)</pre>\n<pre class="line current"><span class="ws">            </span>response = function(request)</pre>\n<pre class="line after"><span class="ws">            </span>return response</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return wrapper</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws"></span> </pre></div>\n</div>\n\n<li><div class="frame" id="frame-139361851698848">\n  <h4>File <cite class="filename">"/home/takanashi/.local/lib/python3.10/site-packages/connexion/decorators/validation.py"</cite>,\n      line <em class="line">196</em>,\n      in <code class="function">wrapper</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">                    </span>if errs:</pre>\n<pre class="line before"><span class="ws">                        </span>raise BadRequestProblem(detail=errs)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">                </span>self.validate_schema(data, request.url)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line current"><span class="ws">            </span>response = function(request)</pre>\n<pre class="line after"><span class="ws">            </span>return response</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return wrapper</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>@classmethod</pre></div>\n</div>\n\n<li><div class="frame" id="frame-139361851701200">\n  <h4>File <cite class="filename">"/home/takanashi/.local/lib/python3.10/site-packages/connexion/decorators/parameter.py"</cite>,\n      line <em class="line">120</em>,\n      in <code class="function">wrapper</code></h4>\n  <div class="source "><pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span># attempt to provide the request context to the function</pre>\n<pre class="line before"><span class="ws">        </span>if pass_context_arg_name and (has_kwargs or pass_context_arg_name in arguments):</pre>\n<pre class="line before"><span class="ws">            </span>kwargs[pass_context_arg_name] = request.context</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line current"><span class="ws">        </span>return function(**kwargs)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return wrapper</pre></div>\n</div>\n\n<li><div class="frame" id="frame-139361851698400">\n  <h4>File <cite class="filename">"/home/takanashi/Desktop/VAmPI/api_views/books.py"</cite>,\n      line <em class="line">41</em>,\n      in <code class="function">add_new_book</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">        </span>book = Book.query.filter_by(user=user, book_title=request_data.get(&#39;book_title&#39;)).first()</pre>\n<pre class="line before"><span class="ws">        </span>if book:</pre>\n<pre class="line before"><span class="ws">            </span>return Response(error_message_helper(&#34;Book Already exists!&#34;), 400, mimetype=&#34;application/json&#34;)</pre>\n<pre class="line before"><span class="ws">        </span>else:</pre>\n<pre class="line before"><span class="ws">            </span>newBook = Book(book_title=request_data.get(&#39;book_title&#39;), secret_content=request_data.get(&#39;secret&#39;),</pre>\n<pre class="line current"><span class="ws">                           </span>user_id=user.id)</pre>\n<pre class="line after"><span class="ws">            </span>db.session.add(newBook)</pre>\n<pre class="line after"><span class="ws">            </span>db.session.commit()</pre>\n<pre class="line after"><span class="ws">            </span>responseObject = {</pre>\n<pre class="line after"><span class="ws">                </span>&#39;status&#39;: &#39;success&#39;,</pre>\n<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;Book has been added.&#39;</pre></div>\n</div>\n</ul>\n  <blockquote>AttributeError: &#39;NoneType&#39; object has no attribute &#39;id&#39;\n</blockquote>\n</div>\n\n<div class="plain">\n    <p>\n      This is the Copy/Paste friendly version of the traceback.\n    </p>\n    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):\n  File &#34;/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__\n    return self.wsgi_app(environ, start_response)\n  File &#34;/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app\n    response = self.handle_exception(e)\n  File &#34;/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app\n    response = self.full_dispatch_request()\n  File &#34;/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File &#34;/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request\n    rv = self.dispatch_request()\n  File &#34;/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n  File &#34;/home/takanashi/.local/lib/python3.10/site-packages/connexion/decorators/decorator.py&#34;, line 68, in wrapper\n    response = function(request)\n  File &#34;/home/takanashi/.local/lib/python3.10/site-packages/connexion/decorators/uri_parsing.py&#34;, line 149, in wrapper\n    response = function(request)\n  File &#34;/home/takanashi/.local/lib/python3.10/site-packages/connexion/decorators/validation.py&#34;, line 196, in wrapper\n    response = function(request)\n  File &#34;/home/takanashi/.local/lib/python3.10/site-packages/connexion/decorators/parameter.py&#34;, line 120, in wrapper\n    return function(**kwargs)\n  File &#34;/home/takanashi/Desktop/VAmPI/api_views/books.py&#34;, line 41, in add_new_book\n    user_id=user.id)\nAttributeError: &#39;NoneType&#39; object has no attribute &#39;id&#39;\n</textarea>\n</div>\n<div class="explanation">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class="nojavascript">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.</span>\n</div>\n      <div class="footer">\n        Brought to you by <strong class="arthur">DON\'T PANIC</strong>, your\n        friendly Werkzeug powered traceback interpreter.\n      </div>\n    </div>\n\n    <div class="pin-prompt">\n      <div class="inner">\n        <h3>Console Locked</h3>\n        <p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form>\n          <p>PIN:\n            <input type=text name=pin size=14>\n            <input type=submit name=btn value="Confirm Pin">\n        </form>\n      </div>\n    </div>\n  </body>\n</html>\n\n<!--\n\nTraceback (most recent call last):\n  File "/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__\n    return self.wsgi_app(environ, start_response)\n  File "/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app\n    response = self.handle_exception(e)\n  File "/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app\n    response = self.full_dispatch_request()\n  File "/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File "/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request\n    rv = self.dispatch_request()\n  File "/home/takanashi/.local/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n  File "/home/takanashi/.local/lib/python3.10/site-packages/connexion/decorators/decorator.py", line 68, in wrapper\n    response = function(request)\n  File "/home/takanashi/.local/lib/python3.10/site-packages/connexion/decorators/uri_parsing.py", line 149, in wrapper\n    response = function(request)\n  File "/home/takanashi/.local/lib/python3.10/site-packages/connexion/decorators/validation.py", line 196, in wrapper\n    response = function(request)\n  File "/home/takanashi/.local/lib/python3.10/site-packages/connexion/decorators/parameter.py", line 120, in wrapper\n    return function(**kwargs)\n  File "/home/takanashi/Desktop/VAmPI/api_views/books.py", line 41, in add_new_book\n    user_id=user.id)\nAttributeError: \'NoneType\' object has no attribute \'id\'\n\n\n-->\n'

